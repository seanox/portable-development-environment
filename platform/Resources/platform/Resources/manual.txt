    Introduction
    ----
Since about 2010, there is the project of virtual environment with modular
structure for developers and users, so that they can use a completely
pre-configured environment with all programs, tools and services, without the
host environment interfering with the running operating system and devouring
resources.

Short setup times, uniform tools with uniform configuration, uniform paths in
the file system, centralized maintenance and easy distribution and updating are
some of the benefits. The environment is easily customizable, can be quickly
switched to use for different projects, and the environment can be easily
transferred to other machines where work started can be continued.

The project includes with platform, a tool for the initial creation, use and
management of the virtual environment and a module concept for the automatic
integration and configuration of tools and programs from any source on the
Internet.



    Usage
    ----

The program is first used on the command line, even though it is primarily a
Windows application. It is the compromise that only one tool is used for
creation, management and use, where the use is in the foreground. 



    1. Creating a new environment
    ----
- Use a directory where the virtual environment will be created
- Copy the platform.exe file into this directory
- Rename platform.exe to the name of the virtual environment you want to create
  e.g. ren platform.exe seanox.exe
- Create the virtual environment for a drive B:
  e.g. seanox.exe B: create
 
A VHDX file is created in the current directory with the same name from the
paltform program. The drive also uses this name.

The drive can be mounted temporarily manually or you can use the platform
program. If you open the virtual drive, a directory structure is already
created. This is only a recommendation and can be rearranged individually.

It is important to know that the platform program will run the Startup.cmd in
the root directory when the virtual environment is started. Everything else can
be changed. 



    2. Creating shortcuts for the usual things
    ----
This step is optional and just nice.

- Create shortcuts
  e.g. seanox.exe B: shortcuts

This command creates shortcuts in the current directory for attaching,
detaching, and compacting the virtual environment. Also here the file name of
the platform application is used: e.g. seanox.attach.lnk, seanox.detach.lnk,
seanox.compact.lnk



    3. Attaching and starting the virtual environment
    ----
- Start the virtual environment
  e.g. seanox.exe B: attach

With attaching of the virtual environment Startup.cmd is called, where the
environment can be configured and the programs can be installed, configured and
started parameterized. 



    4. Installation of programs and services 
    ----
The virtual environment is a real drive with a drive letter and a file system.
The user profile and application data are redirected to the Settings directory
in the root directory by default in this environment 

Programs can be installed normally this way.

Recommended and easier is the use of portable versions.

Good sources are:
- https://portableapps.com
- https://portapps.io

But also otherwise many manufacturers offer portable versions or portable use of
the software.

With attaching and detaching of the virtual environment Startup.cmd is called,
where the environment can be configured and the programs can be installed,
configured and started, stopped and uninstalled parameterized. 



    5. Stop and detach and the virtual environment.
    ----
If programs and services that use the virtual platform environment variables
should also be started with the virtual environment. Detaching the environment
of the environment should also be used in this way, which properly terminates
and uninstalls all programs, if necessary.

How does it work?

When the environment is started, a child process is started that also executes
Startup.cmd. This child process contains all environment variables of the
virtual environment and remains invisible until the last program of the virtual
environment is terminated. From this child process further child processes can
be started, which then inherit the environment variables as exclusive copy.

A program launcher is recommended to keep this process alive, as it is started
when the virtual environment is started and ends only when the virtual
environment is detached. And so should the quitting and detaching of the virtual
environment should be initiated via the launcher.

Detachment can be invoked in the environment via environment variables.

%PLATFORM_APP% %HOMEDRIVE% detach

Or it can also be called with the plarform program.

e.g. seanox.exe B: detach

When detaching, Startup.cmd is called with the parameter 'exit' and then all
programs, which were started from the virtual environment, are terminated first
friendly and then hard.



    6. Personalization of the virtual environment
    ----
Even though a virtual environment can be configured very well, in some cases
further data of user, computer and environment are still needed. For this
purpose, the virtual environment contains the settings component. Settings
supports a key-values file, placeholders and a file list where the placeholders
are replaced. The key-values file is located outside the virtual environment and
is reapplied with each startup.

More details and a description can be found in the ini file in the working
directory of the virtual environment.



    7. Compacting of the virtual environment
    ----
The virtual environment uses a virtual disk with dynamic size. During use, this
file will grow but not automatically compact. But the size of the virtual hard
disk can be optimized manually.

- Stop and detach and the virtual environment
- Start optimization
  e.g. seanox.exe B: compact

For optimization, the virtual disk is attached without running Startup.cmd. If
there is a temp directory in the root directory, it will be emptied. Then the
virtual disk is compacted due to the omission of unused space.



    8. Standard and error output
    ----
The user interface is very minimalistic and I tried a new concept :-)
There has been no room for long issues here. Therefore a log file will be
created where you can find more output.



    That's it -- have fun with it!
